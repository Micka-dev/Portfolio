[
  {
    "id": "1",
    "title": "Argent Bank",

    "text": "Application bancaire en ligne avec une interface utilisateur dynamique et réactive, utilisant les technologies React, React Router, Redux et Redux Toolkit.",

    "webSite": "",

    "siteCode": "https://github.com/Micka-dev/Projet-10-Argent-Bank.git",

    "description": "Le projet <strong>Argent Bank</strong> consiste à développer une application bancaire en ligne avec une interface utilisateur dynamique et réactive, en utilisant les technologies <strong>React</strong> et <strong>Redux</strong>. L'objectif principal est de créer un <strong>tableau de bord utilisateur complet et responsive permettant aux utilisateurs de gérer leurs informations personnelles et leurs transactions de manière fluide</strong>. L'application doit intégrer une <strong>fonctionnalité d'authentification</strong> des utilisateurs, où ceux-ci pourront se connecter, consulter leur profil et modifier leur pseudo. Des bonnes pratiques de <strong>Green Code</strong>, comme l'optimisation des images et la création de composants réutilisables, seront mises en place pour assurer une performance optimale. <br><br>La communication entre le front-end et le back-end sera assurée via des appels <strong>API REST</strong>, dont les points d'accès seront définis à l'aide de <strong>Swagger</strong>. Le back-end, déjà en place, utilise <strong>Node.js</strong> pour exécuter le code JavaScript côté serveur. Le projet requiert une gestion rigoureuse du <strong>state global avec Redux</strong>, pour maintenir une cohérence à travers l'application. L'intégration avec le back-end et les tests des routes API via des outils comme Postman garantiront une application robuste et sécurisée. <br><br>En résumé, Argent Bank vise à fournir une expérience bancaire en ligne moderne et efficace, en tirant parti des <strong>technologies de pointe</strong> et des meilleures pratiques de développement pour offrir aux utilisateurs une plateforme <strong>intuitive et sécurisée</strong>.",

    "learned": "Dans ce projet, j'ai travaillé sur le développement front-end d’une application bancaire en utilisant <strong>React</strong>, <strong>Redux</strong> et <strong>Redux Toolkit</strong> pour créer une expérience utilisateur dynamique et réactive.<br><br>Ma mission principale a été d'intégrer le front-end avec le back-end via des appels API en gérant l'assynchrone avec des <strong>thunks</strong>. J'ai écrit des appels à l'<strong>API REST</strong> pour connecter les deux parties de l'application, assurant une communication fluide entre le client et le serveur.<br><br>J'ai utilisé React pour développer <strong>l'interface utilisateur</strong> de l'application bancaire, en me concentrant sur la création d'un <strong>tableau de bord</strong> complet et <strong>responsive</strong> pour les utilisateurs. <br><br>J'ai utilisé <strong>Redux Toolkit</strong> pour gérer les données de l'application notamment en créant des <strong>slices</strong>. Cela m'a permis de maintenir un état global cohérent à travers l'application.<br><br>Pour définir les points d'accès de l'API et modéliser les interactions avec les données des transactions, j'ai utiliser <strong>Swagger</strong>. <br><br>J'ai utilisé <strong>Node.js</strong> pour exécuter le code JavaScript côté serveur. Cela m'a donné une expérience pratique de la gestion d'une application <strong>full-stack</strong>.",

    "cover": "/Assets/Argent-bank/argent-bank.webp",

    "pictures": [
      "/Assets/Argent-bank/argent-bank.webp",
      "/Assets/Argent-bank/argent-bank1.webp",
      "/Assets/Argent-bank/argent-bank2.webp",
      "/Assets/Argent-bank/argent-bank3.webp",
      "/Assets/Argent-bank/argent-bank4.webp",
      "/Assets/Argent-bank/argent-bank5.webp"
    ],

    "stacks": [
      "/Assets/Logos/React.png",
      "/Assets/Logos/Redux.png",
      "/Assets/Logos/React-Router.png",
      "/Assets/Logos/Redux Toolkit.png",
      "/Assets/Logos/Node.js.png",
      "/Assets/Logos/Swagger.png"
    ]
  },

  {
    "id": "2",
    "title": "Kasa ",

    "text": "Application immobilière de location d'appartements entre particuliers, utilisant les technologies React, Sass et React Router.",

    "webSite": "",

    "siteCode": "https://github.com/Micka-dev/Projet-7-Kasa.git",

    "description": "Le projet <strong>Kasa</strong> consiste en une <strong>refonte totale du site de location</strong> d'appartements entre particuliers, codé initialement en ASP.NET, il y a plus de dix ans. Sous l'impulsion de Laura, la CTO, l'objectif est de moderniser l'ensemble de l'application en adoptant une stack JavaScript complète : <strong>NodeJS</strong> pour le back-end et <strong>React</strong> pour le front-end. En l’absence d'un développeur back-end, la priorité est donnée au développement du front-end, avec l'utilisation de maquettes <strong>Figma </strong>responsives et d'un fichier <strong>JSON</strong> contenant les dernières annonces de logements pour construire les composants nécessaires. <br></br>Paul, le designer, a fourni les maquettes et les ressources nécessaires pour le design d'interface sur Figma, en insistant sur l'utilisation de <strong>composants réutilisables</strong> pour faciliter le travail sur React. Les fonctionnalités attendues incluent, entre autres, une galerie de photos avec défilement circulaire, des <strong>composants Collapse interactifs</strong> pour afficher et masquer les sections d'information, et un routage efficace avec <strong>React Router</strong> pour assurer une navigation fluide et gérer les erreurs de route. Le projet met également l'accent sur une mise en page cohérente utilisant <strong>Sass</strong> pour structurer le code CSS, les <strong>animations</strong> ainsi que la  création de composants spécifiques comme les bannières et les cartes des logements. Le tout en <strong>responsive</strong>.",

    "learned": "Dans ce projet, j’ai implémenté le front-end d’une application en utilisant <strong>React</strong> et <strong>React Router</strong> pour créer une expérience utilisateur moderne et réactive. .<br></br>J’ai travaillé sur la logique de présentation des données et les composants React, une bibliothèque JavaScript populaire pour la création d'interfaces utilisateur.  <br></br> J’ai utilisé React Router pour configurer la navigation entre les différentes pages de l'application. Cela m’a permis de comprendre comment gérer efficacement le <strong>routage</strong> dans une application web moderne. <br></br>Le projet était exclusivement concentré sur le développement front-end, en se basant sur les maquettes <strong>Figma</strong> fournies et en utilisant des données simulées extraites d'un fichier JSON. <br></br>J’ai initialisé le projet avec Create React App, un outil qui simplifie la configuration initiale d'une application React. J’ai également utilisé <strong>Node.js</strong> pour exécuter du code JavaScript en dehors du navigateur. .<br></br>J’ai utilisé  <strong>SASS</strong> pour gérer le CSS et implémenté des <strong>animations CSS</strong> pour améliorer l'expérience utilisateur comme un <strong>carrousel</strong> bouclant à l'infini. <br></br>L’ensemble de ces compétences me permet de créer des applications web interactives et visuellement attrayantes, très demandées dans l'industrie du développement web.",

    "cover": "/Assets/Kasa/kasa.webp",

    "pictures": [
      "/Assets/Kasa/kasa.webp",
      "/Assets/Kasa/kasa1.webp",
      "/Assets/Kasa/kasa2.webp",
      "/Assets/Kasa/kasa3.webp"
    ],

    "stacks": [
      "/Assets/Logos/React.png",
      "/Assets/Logos/React-Router.png",
      "/Assets/Logos/Node.js.png",
      "/Assets/Logos/SASS.png",
      "/Assets/Logos/Figma.png"
    ]
  },
  {
    "id": "3",
    "title": "Kasa ",

    "text": "Application immobilière de location d'appartements entre particuliers, utilisant les technologies React, Sass et React Router.",

    "webSite": "",

    "siteCode": "https://github.com/Micka-dev/Projet-7-Kasa.git",

    "description": "Le projet <strong>Kasa</strong> consiste en une <strong>refonte totale du site de location</strong> d'appartements entre particuliers, codé initialement en ASP.NET, il y a plus de dix ans. Sous l'impulsion de Laura, la CTO, l'objectif est de moderniser l'ensemble de l'application en adoptant une stack JavaScript complète : <strong>NodeJS</strong> pour le back-end et <strong>React</strong> pour le front-end. En l’absence d'un développeur back-end, la priorité est donnée au développement du front-end, avec l'utilisation de maquettes <strong>Figma </strong>responsives et d'un fichier <strong>JSON</strong> contenant les dernières annonces de logements pour construire les composants nécessaires. <br></br>Paul, le designer, a fourni les maquettes et les ressources nécessaires pour le design d'interface sur Figma, en insistant sur l'utilisation de <strong>composants réutilisables</strong> pour faciliter le travail sur React. Les fonctionnalités attendues incluent, entre autres, une galerie de photos avec défilement circulaire, des <strong>composants Collapse interactifs</strong> pour afficher et masquer les sections d'information, et un routage efficace avec <strong>React Router</strong> pour assurer une navigation fluide et gérer les erreurs de route. Le projet met également l'accent sur une mise en page cohérente utilisant <strong>Sass</strong> pour structurer le code CSS, les <strong>animations</strong> ainsi que la  création de composants spécifiques comme les bannières et les cartes des logements. Le tout en <strong>responsive</strong>.",

    "learned": "Dans ce projet, j’ai implémenté le front-end d’une application en utilisant <strong>React</strong> et <strong>React Router</strong> pour créer une expérience utilisateur moderne et réactive. .<br></br>J’ai travaillé sur la logique de présentation des données et les composants React, une bibliothèque JavaScript populaire pour la création d'interfaces utilisateur.  <br></br> J’ai utilisé React Router pour configurer la navigation entre les différentes pages de l'application. Cela m’a permis de comprendre comment gérer efficacement le <strong>routage</strong> dans une application web moderne. <br></br>Le projet était exclusivement concentré sur le développement front-end, en se basant sur les maquettes <strong>Figma</strong> fournies et en utilisant des données simulées extraites d'un fichier JSON. <br></br>J’ai initialisé le projet avec Create React App, un outil qui simplifie la configuration initiale d'une application React. J’ai également utilisé <strong>Node.js</strong> pour exécuter du code JavaScript en dehors du navigateur. .<br></br>J’ai utilisé  <strong>SASS</strong> pour gérer le CSS et implémenté des <strong>animations CSS</strong> pour améliorer l'expérience utilisateur comme un <strong>carrousel</strong> bouclant à l'infini. <br></br>L’ensemble de ces compétences me permet de créer des applications web interactives et visuellement attrayantes, très demandées dans l'industrie du développement web.",

    "cover": "/Assets/Kasa/kasa.webp",

    "pictures": [
      "/Assets/Kasa/kasa.webp",
      "/Assets/Kasa/kasa1.webp",
      "/Assets/Kasa/kasa2.webp",
      "/Assets/Kasa/kasa3.webp"
    ],

    "stacks": [
      "/Assets/Logos/React.png",
      "/Assets/Logos/React-Router.png",
      "/Assets/Logos/Node.js.png",
      "/Assets/Logos/SASS.png",
      "/Assets/Logos/Figma.png"
    ]
  },
  {
    "id": "4",
    "title": "Kasa ",

    "text": "Application immobilière de location d'appartements entre particuliers, utilisant les technologies React, Sass et React Router.",

    "webSite": "",

    "siteCode": "https://github.com/Micka-dev/Projet-7-Kasa.git",

    "description": "Le projet <strong>Kasa</strong> consiste en une <strong>refonte totale du site de location</strong> d'appartements entre particuliers, codé initialement en ASP.NET, il y a plus de dix ans. Sous l'impulsion de Laura, la CTO, l'objectif est de moderniser l'ensemble de l'application en adoptant une stack JavaScript complète : <strong>NodeJS</strong> pour le back-end et <strong>React</strong> pour le front-end. En l’absence d'un développeur back-end, la priorité est donnée au développement du front-end, avec l'utilisation de maquettes <strong>Figma </strong>responsives et d'un fichier <strong>JSON</strong> contenant les dernières annonces de logements pour construire les composants nécessaires. <br></br>Paul, le designer, a fourni les maquettes et les ressources nécessaires pour le design d'interface sur Figma, en insistant sur l'utilisation de <strong>composants réutilisables</strong> pour faciliter le travail sur React. Les fonctionnalités attendues incluent, entre autres, une galerie de photos avec défilement circulaire, des <strong>composants Collapse interactifs</strong> pour afficher et masquer les sections d'information, et un routage efficace avec <strong>React Router</strong> pour assurer une navigation fluide et gérer les erreurs de route. Le projet met également l'accent sur une mise en page cohérente utilisant <strong>Sass</strong> pour structurer le code CSS, les <strong>animations</strong> ainsi que la  création de composants spécifiques comme les bannières et les cartes des logements. Le tout en <strong>responsive</strong>.",

    "learned": "Dans ce projet, j’ai implémenté le front-end d’une application en utilisant <strong>React</strong> et <strong>React Router</strong> pour créer une expérience utilisateur moderne et réactive. .<br></br>J’ai travaillé sur la logique de présentation des données et les composants React, une bibliothèque JavaScript populaire pour la création d'interfaces utilisateur.  <br></br> J’ai utilisé React Router pour configurer la navigation entre les différentes pages de l'application. Cela m’a permis de comprendre comment gérer efficacement le <strong>routage</strong> dans une application web moderne. <br></br>Le projet était exclusivement concentré sur le développement front-end, en se basant sur les maquettes <strong>Figma</strong> fournies et en utilisant des données simulées extraites d'un fichier JSON. <br></br>J’ai initialisé le projet avec Create React App, un outil qui simplifie la configuration initiale d'une application React. J’ai également utilisé <strong>Node.js</strong> pour exécuter du code JavaScript en dehors du navigateur. .<br></br>J’ai utilisé  <strong>SASS</strong> pour gérer le CSS et implémenté des <strong>animations CSS</strong> pour améliorer l'expérience utilisateur comme un <strong>carrousel</strong> bouclant à l'infini. <br></br>L’ensemble de ces compétences me permet de créer des applications web interactives et visuellement attrayantes, très demandées dans l'industrie du développement web.",

    "cover": "/Assets/Kasa/kasa.webp",

    "pictures": [
      "/Assets/Kasa/kasa.webp",
      "/Assets/Kasa/kasa1.webp",
      "/Assets/Kasa/kasa2.webp",
      "/Assets/Kasa/kasa3.webp"
    ],

    "stacks": [
      "/Assets/Logos/React.png",
      "/Assets/Logos/React-Router.png",
      "/Assets/Logos/Node.js.png",
      "/Assets/Logos/SASS.png",
      "/Assets/Logos/Figma.png"
    ]
  },
  {
    "id": "5",
    "title": "Kasa ",

    "text": "Application immobilière de location d'appartements entre particuliers, utilisant les technologies React, Sass et React Router.",

    "webSite": "",

    "siteCode": "https://github.com/Micka-dev/Projet-7-Kasa.git",

    "description": "Le projet <strong>Kasa</strong> consiste en une <strong>refonte totale du site de location</strong> d'appartements entre particuliers, codé initialement en ASP.NET, il y a plus de dix ans. Sous l'impulsion de Laura, la CTO, l'objectif est de moderniser l'ensemble de l'application en adoptant une stack JavaScript complète : <strong>NodeJS</strong> pour le back-end et <strong>React</strong> pour le front-end. En l’absence d'un développeur back-end, la priorité est donnée au développement du front-end, avec l'utilisation de maquettes <strong>Figma </strong>responsives et d'un fichier <strong>JSON</strong> contenant les dernières annonces de logements pour construire les composants nécessaires. <br></br>Paul, le designer, a fourni les maquettes et les ressources nécessaires pour le design d'interface sur Figma, en insistant sur l'utilisation de <strong>composants réutilisables</strong> pour faciliter le travail sur React. Les fonctionnalités attendues incluent, entre autres, une galerie de photos avec défilement circulaire, des <strong>composants Collapse interactifs</strong> pour afficher et masquer les sections d'information, et un routage efficace avec <strong>React Router</strong> pour assurer une navigation fluide et gérer les erreurs de route. Le projet met également l'accent sur une mise en page cohérente utilisant <strong>Sass</strong> pour structurer le code CSS, les <strong>animations</strong> ainsi que la  création de composants spécifiques comme les bannières et les cartes des logements. Le tout en <strong>responsive</strong>.",

    "learned": "Dans ce projet, j’ai implémenté le front-end d’une application en utilisant <strong>React</strong> et <strong>React Router</strong> pour créer une expérience utilisateur moderne et réactive. .<br></br>J’ai travaillé sur la logique de présentation des données et les composants React, une bibliothèque JavaScript populaire pour la création d'interfaces utilisateur.  <br></br> J’ai utilisé React Router pour configurer la navigation entre les différentes pages de l'application. Cela m’a permis de comprendre comment gérer efficacement le <strong>routage</strong> dans une application web moderne. <br></br>Le projet était exclusivement concentré sur le développement front-end, en se basant sur les maquettes <strong>Figma</strong> fournies et en utilisant des données simulées extraites d'un fichier JSON. <br></br>J’ai initialisé le projet avec Create React App, un outil qui simplifie la configuration initiale d'une application React. J’ai également utilisé <strong>Node.js</strong> pour exécuter du code JavaScript en dehors du navigateur. .<br></br>J’ai utilisé  <strong>SASS</strong> pour gérer le CSS et implémenté des <strong>animations CSS</strong> pour améliorer l'expérience utilisateur comme un <strong>carrousel</strong> bouclant à l'infini. <br></br>L’ensemble de ces compétences me permet de créer des applications web interactives et visuellement attrayantes, très demandées dans l'industrie du développement web.",

    "cover": "/Assets/Kasa/kasa.webp",

    "pictures": [
      "/Assets/Kasa/kasa.webp",
      "/Assets/Kasa/kasa1.webp",
      "/Assets/Kasa/kasa2.webp",
      "/Assets/Kasa/kasa3.webp"
    ],

    "stacks": [
      "/Assets/Logos/React.png",
      "/Assets/Logos/React-Router.png",
      "/Assets/Logos/Node.js.png",
      "/Assets/Logos/SASS.png",
      "/Assets/Logos/Figma.png"
    ]
  },
  {
    "id": "6",
    "title": "Kasa ",

    "text": "Application immobilière de location d'appartements entre particuliers, utilisant les technologies React, Sass et React Router.",

    "webSite": "",

    "siteCode": "https://github.com/Micka-dev/Projet-7-Kasa.git",

    "description": "Le projet <strong>Kasa</strong> consiste en une <strong>refonte totale du site de location</strong> d'appartements entre particuliers, codé initialement en ASP.NET, il y a plus de dix ans. Sous l'impulsion de Laura, la CTO, l'objectif est de moderniser l'ensemble de l'application en adoptant une stack JavaScript complète : <strong>NodeJS</strong> pour le back-end et <strong>React</strong> pour le front-end. En l’absence d'un développeur back-end, la priorité est donnée au développement du front-end, avec l'utilisation de maquettes <strong>Figma </strong>responsives et d'un fichier <strong>JSON</strong> contenant les dernières annonces de logements pour construire les composants nécessaires. <br></br>Paul, le designer, a fourni les maquettes et les ressources nécessaires pour le design d'interface sur Figma, en insistant sur l'utilisation de <strong>composants réutilisables</strong> pour faciliter le travail sur React. Les fonctionnalités attendues incluent, entre autres, une galerie de photos avec défilement circulaire, des <strong>composants Collapse interactifs</strong> pour afficher et masquer les sections d'information, et un routage efficace avec <strong>React Router</strong> pour assurer une navigation fluide et gérer les erreurs de route. Le projet met également l'accent sur une mise en page cohérente utilisant <strong>Sass</strong> pour structurer le code CSS, les <strong>animations</strong> ainsi que la  création de composants spécifiques comme les bannières et les cartes des logements. Le tout en <strong>responsive</strong>.",

    "learned": "Dans ce projet, j’ai implémenté le front-end d’une application en utilisant <strong>React</strong> et <strong>React Router</strong> pour créer une expérience utilisateur moderne et réactive. .<br></br>J’ai travaillé sur la logique de présentation des données et les composants React, une bibliothèque JavaScript populaire pour la création d'interfaces utilisateur.  <br></br> J’ai utilisé React Router pour configurer la navigation entre les différentes pages de l'application. Cela m’a permis de comprendre comment gérer efficacement le <strong>routage</strong> dans une application web moderne. <br></br>Le projet était exclusivement concentré sur le développement front-end, en se basant sur les maquettes <strong>Figma</strong> fournies et en utilisant des données simulées extraites d'un fichier JSON. <br></br>J’ai initialisé le projet avec Create React App, un outil qui simplifie la configuration initiale d'une application React. J’ai également utilisé <strong>Node.js</strong> pour exécuter du code JavaScript en dehors du navigateur. .<br></br>J’ai utilisé  <strong>SASS</strong> pour gérer le CSS et implémenté des <strong>animations CSS</strong> pour améliorer l'expérience utilisateur comme un <strong>carrousel</strong> bouclant à l'infini. <br></br>L’ensemble de ces compétences me permet de créer des applications web interactives et visuellement attrayantes, très demandées dans l'industrie du développement web.",

    "cover": "/Assets/Kasa/kasa.webp",

    "pictures": [
      "/Assets/Kasa/kasa.webp",
      "/Assets/Kasa/kasa1.webp",
      "/Assets/Kasa/kasa2.webp",
      "/Assets/Kasa/kasa3.webp"
    ],

    "stacks": [
      "/Assets/Logos/React.png",
      "/Assets/Logos/React-Router.png",
      "/Assets/Logos/Node.js.png",
      "/Assets/Logos/SASS.png",
      "/Assets/Logos/Figma.png"
    ]
  }
]
